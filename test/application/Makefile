DEBUG = yes
CC = gcc
RACINE = ../..
LIBPATH = -L $(RACINE)/lib/
LIB = $(RACINE)/lib/libthread.a
BIN = $(RACINE)/bin/application/
EXEC = $(BIN)somme $(BIN)tri $(BIN)fibonacci $(BIN)semaphore $(BIN)pereFils $(BIN)test $(BIN)test-mprotect   

ifeq ($(DEBUG),yes)
	CFLAGS = -W -Wall -g
else
	CFLAGS = 
endif

LDFLAGS = -lpthread
LDFLAGSTH = $(LIBPATH) -lthread 

all: $(EXEC)

ifeq ($(DEBUG),yes)
	@echo "Génération en mode debug"
else
	@echo "Génération en mode release"
endif

$(BIN)test-mprotect: test-mprotect.c $(LIB)
	$(CC) -o $@ $< $(LDFLAGSTH) $(CFLAGS)
$(BIN)pereFils: pereFils.c $(LIB)
	$(CC) -o $@ $< $(LDFLAGSTH) $(CFLAGS)
$(BIN)test: test.c $(LIB)
	$(CC) -o $@ $< $(LDFLAGSTH) $(CFLAGS)
$(BIN)somme: somme.c $(LIB)
	$(CC) -o $@ $< $(LDFLAGSTH) $(LDFLAGS) $(CFLAGS)
$(BIN)tri: tri.c $(LIB)
	$(CC) -o $@ $< $(LDFLAGSTH) $(LDFLAGS) $(CFLAGS)
$(BIN)fibonacci: fibonacci.c $(LIB)
	$(CC) -o $@ $< $(LDFLAGSTH) $(CFLAGS)
$(BIN)semaphore: semaphore.c $(LIB)
	$(CC) -o $@ $< $(LDFLAGSTH) $(CFLAGS)	

test-mprotect: $(BIN)test-mprotect
	./$<
test: $(BIN)test
	./$<
somme: $(BIN)somme
	./$<
tri: $(BIN)tri
	./$<
fibonacci: $(BIN)fibonacci
	./$<
semaphore: $(BIN)semaphore
	./$<
pereFils: $(BIN)pereFils
	./$<

.PHONY: clean mrproper

clean:
	rm -f *.o *~ *#

mrproper:
	rm -f $(EXEC)