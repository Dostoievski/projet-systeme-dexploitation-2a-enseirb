DEBUG = yes
O_PRIORITE = yes
O_PREEMPTION = yes
O_KILLCHILDREN = yes
O_MAINISTHREAD = yes

CC=gcc

LIB = ../lib/libthread.a
CFLAGS = 
PRIORITE =
PREEMPTION =
KILLCHILDREN =
MAINISTHREAD =

ifeq ($(DEBUG),yes)
	CFLAGS = -W -Wall -g
endif
ifeq ($(O_PRIORITE),yes)
	PRIORITE = -DO_PRIORITE
endif
ifeq ($(O_PREEMPTION),yes)
	PREEMPTION = -DO_PREEMPTION
endif
ifeq ($(O_KILLCHILDREN),yes)
	KILLCHILDREN = -DO_KILLCHILDREN
endif
ifeq ($(O_KILLCHILDREN),yes)
	MAINISTHREAD = -DO_MAINISTHREAD
endif

CFLAGS = $(PRIORITE) $(PREEMPTION) $(KILLCHILDREN) $(MAINISTHREAD)
LDFLAGS = 
SRC= $(wildcard *.c)
OBJ= $(SRC:.c=.o)

all: $(LIB)

	@echo "\n******************************************"
	@echo "*        BILAN DE LA COMPILATION         *"
	@echo "******************************************"
	@echo "[MODE DE LA COMPILATION]"
ifeq ($(DEBUG),yes)
	@echo "- mode debug"
else
	@echo "- mode libre"
endif

	@echo "[POLITIQUE ADOPTEE]:"

ifeq ($(O_PRIORITE),yes)
	@echo "- thread de plus grande priorite a la main"
else
	@echo "- thread 1er de la liste d'attente a la main"
endif

ifeq ($(O_PREEMPTION),yes)
	@echo "- ordonnancement par preemption"
else
	@echo "- ordonnancement par colaboration"
endif

ifeq ($(O_KILLCHILDREN),yes)
	@echo "- le pere tue ses enfants en quittant"
else
	@echo "- le pere ne tue pas ses enfant en quittant"
endif

ifeq ($(O_MAINISTHREAD),yes)
	@echo "- le main est traité comme un thread"
else
	@echo "- le main n'est pas traité comme un thread"
endif


$(LIB): $(OBJ)
	@ar -rv $@ $^
	ranlib $@

timer.o: timer.h
thread.o: thread.h
priorite.o: priorite.h
fifoThread.o: fifoThread.h
my_semaphore.o: my_semaphore.h
threadStructure.o: threadStructure.h

%.o: %.c
	@$(CC) -o $@ -c $< $(CFLAGS)

.PHONY: clean

clean:
	rm -f *.o *~ *#