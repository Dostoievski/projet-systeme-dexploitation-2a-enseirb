#ifndef __FILETHREAD_H__
#define __FILETHREAD_H__

typedef int thread_t;

typedef enum status{
  STATUS_BLOCKED,
  STATUS_READY,
  STATUS_FINISH,
  STATUS_RUNNING
}status;

/*
 * La structure fifo des threads  
 */
typedef struct thread {
  thread_t tid;
  ucontext_t * context;
  enum status state;
  void * valRetour;
} thread;

ucontext_t* mallocContext();

void * getValRetour(thread*);

enum status getStatus(thread*);

void setCurrentThread(thread_t th);

thread_t getCurrentThread();

ucontext_t* createContext(void(*func)(void),void *funcarg);

thread * newThread(thread_t tid, enum status, ucontext_t * uc);

thread_t getTidThread (thread *th);

ucontext_t *getThreadContext(thread *th);

void killThread(thread * th);

thread_t getNextTID();
#endif
